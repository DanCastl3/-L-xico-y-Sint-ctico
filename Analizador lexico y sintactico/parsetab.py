
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA COMA END ID INT LLAVE_ABIERTA LLAVE_CERRADA NUMERO OPERADOR PABIERTO PCERRADO PRINTF PROGRAMA PUNTO_COMA READ SIMBOLOprograma : PROGRAMA ID PABIERTO PCERRADO LLAVE_ABIERTA declaraciones instrucciones LLAVE_CERRADAdeclaraciones : INT ID COMA ID COMA ID PUNTO_COMAinstrucciones : lectura lectura asignacion impresion finlectura : READ ID PUNTO_COMAasignacion : ID OPERADOR ID OPERADOR ID PUNTO_COMAimpresion : PRINTF PABIERTO CADENA PCERRADO PUNTO_COMAfin : END PUNTO_COMA'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,13,],[0,-1,]),'ID':([2,8,11,14,16,19,23,24,32,],[3,12,15,18,20,-4,28,29,35,]),'PABIERTO':([3,22,],[4,27,]),'PCERRADO':([4,31,],[5,34,]),'LLAVE_ABIERTA':([5,],[6,]),'INT':([6,],[8,]),'READ':([7,10,19,33,],[11,11,-4,-2,]),'LLAVE_CERRADA':([9,25,30,],[13,-3,-7,]),'COMA':([12,20,],[16,24,]),'PUNTO_COMA':([15,26,29,34,35,],[19,30,33,36,37,]),'PRINTF':([17,37,],[22,-5,]),'OPERADOR':([18,28,],[23,32,]),'END':([21,36,],[26,-6,]),'CADENA':([27,],[31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([6,],[7,]),'instrucciones':([7,],[9,]),'lectura':([7,10,],[10,14,]),'asignacion':([14,],[17,]),'impresion':([17,],[21,]),'fin':([21,],[25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID PABIERTO PCERRADO LLAVE_ABIERTA declaraciones instrucciones LLAVE_CERRADA','programa',8,'p_programa','app.py',73),
  ('declaraciones -> INT ID COMA ID COMA ID PUNTO_COMA','declaraciones',7,'p_declaraciones','app.py',77),
  ('instrucciones -> lectura lectura asignacion impresion fin','instrucciones',5,'p_instrucciones','app.py',81),
  ('lectura -> READ ID PUNTO_COMA','lectura',3,'p_lectura','app.py',85),
  ('asignacion -> ID OPERADOR ID OPERADOR ID PUNTO_COMA','asignacion',6,'p_asignacion','app.py',89),
  ('impresion -> PRINTF PABIERTO CADENA PCERRADO PUNTO_COMA','impresion',5,'p_impresion','app.py',93),
  ('fin -> END PUNTO_COMA','fin',2,'p_fin','app.py',97),
]
